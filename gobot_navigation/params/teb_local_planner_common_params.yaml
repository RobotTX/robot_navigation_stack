#http://wiki.ros.org/teb_local_planner
#Timed Elastic Band
#The initial trajectory generated by a global planner is optimized during runtime 
#w.r.t. minimizing the trajectory execution time
odom_topic: odom
map_frame: map

####Key params that affect motion####
weight_max_vel_x: 1.0 #default:2
weight_max_vel_theta: 2.0 #default:1
weight_acc_lim_x: 1.0 #default:1
weight_acc_lim_theta: 1.0 #default:1

#Optimization weight for minimzing the distance to via-points
#How close robot follows the via-points
weight_viapoint: 75.0 # 1.0
weight_kinematics_forward_drive: 200.0
weight_obstacle: 50.0
weight_dynamic_obstacle: 50.0
####Key params that affect motion####
weight_kinematics_nh: 1000.0
weight_optimaltime: 1 #2
selection_alternative_time_cost: False # not in use yet
min_turning_radius: 0.0
# GoalTolerance
xy_goal_tolerance: 0.15
yaw_goal_tolerance: 0.15 #8.6 degrees
#Remove the goal velocity constraint such that the robot can arrive at the goal with maximum speed 
free_goal_vel: False

# Trajectory
teb_autosize: True
dt_ref: 0.3
dt_hysteresis: 0.1
#Overwrite orientation of local subgoals provided by the global planner
global_plan_overwrite_orientation: True
#If true, the planner uses the exact arc length in velocity, acceleration and turning rate computations (-> increased cpu time), 
#otherwise the Euclidean approximation is used. 
#default:false
exact_arc_length: True
#Specify the maximum length (cumulative Euclidean distances) of the subset of the global plan taken into account for optimization
#Constrinted by the local costmap size (rolling window)
max_global_plan_lookahead_dist: 5.0
#Specify up to which pose on the predicted plan the feasibility should be checked each sampling interval. 
feasibility_check_no_poses: 5
#If positive, via-points are extrected from the global plan (path-following mode)
#Value determines min. separation between each two consecutive via-points along the global plan
#-0.1 (disabled)
global_plan_viapoint_sep: 0.3 # -0.1
shrink_horizon_min_duration: 10.0
#If true, underlying trajectories might be initialized with 
#backwards motions in case the goal is behind the start within the local costmap
allow_init_with_backwards_motion: False

footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    type: "polygon"
    vertices: [[0.250,0],[0.245,-0.167],[0.225,-0.225],[0.195,-0.245],[0.0893,-0.250],[0,-0.250],[-0.1786,-0.245],[-0.225,-0.225],[-0.245,-0.167],[-0.250,-0.0835],[-0.250,0],[-0.245,0.167],[-0.225,0.225],[-0.1786,0.245],[-0.0893,0.250],[0,0.250],[0.1786,0.245],[0.225,0.225],[0.245,0.167],[0.250,0.0835]]
# Obstacles
#Minimum desired separation from obstacles in meters 
min_obstacle_dist: 0.05
include_costmap_obstacles: true
costmap_obstacles_behind_robot_dist: 1.0
obstacle_poses_affected: 30
#Buffer zone around obstacles with non-zero penalty costs (should be larger than min_obstacle_dist in order to take effect). 
#Also refer to the weight weight_inflation. 
inflation_dist: 0.5
dynamic_obstacle_inflation_dist: 0.5
include_dynamic_obstacles: false

# Optimization

no_inner_iterations: 4
no_outer_iterations: 3
optimization_activate: True
optimization_verbose: False
#Add a small safety margin to penalty functions for hard-constraint approximations 
penalty_epsilon: 0.099

# Homotopy Class Planner
#Activate parallel planning in distinctive topologies
enable_homotopy_class_planning: True
enable_multithreading: True
simple_exploration: False
max_number_classes: 4
roadmap_graph_no_samples: 15
roadmap_graph_area_width: 5
h_signature_prescaler: 0.5
h_signature_threshold: 0.1
obstacle_keypoint_offset: 0.1
obstacle_heading_threshold: 0.5
visualize_hc_graph: False
selection_cost_hysteresis: 1.05 # 1.0